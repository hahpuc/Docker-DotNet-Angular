events {
  worker_connections 8192;
  multi_accept        on;
  use                 epoll;
}

http {
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent $request_time $upstream_response_time  "$http_referer" '
                    '"$http_user_agent" "$request_time" "$upstream_addr" "$http_x_forwarded_for"';

  access_log  off;
  open_file_cache          max=2000 inactive=20s;
  open_file_cache_valid    60s;
  open_file_cache_min_uses 5;
  open_file_cache_errors   off;
  client_header_timeout 3000;
  client_body_timeout 3000;
  #fastcgi_read_timeout 3000;
  client_max_body_size 500m;
  fastcgi_buffers 8 128k;
  fastcgi_buffer_size 128k;
  sendfile            on;
  tcp_nopush          on;
  tcp_nodelay         on;
  keepalive_timeout   120;
  types_hash_max_size 2048;
  gzip on;
  gzip_proxied any;
  gzip_types text/plain text/xml text/css application/x-javascript;
  gzip_vary on;
  gzip_disable “MSIE [1-6]\.(?!.*SV1)”;
  large_client_header_buffers 4 16k;
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  server {
    listen 80;
    server_name localhost;
    error_log /var/log/nginx/web.error.log ;
    access_log  /var/log/nginx/web.access.log  main;
    root /app;
    index index.html;

    location ~ \.(html)$ {
      expires off;
      access_log off;
      add_header Cache-Control "no-cache";
      add_header Last-Modified $date_gmt;
      if_modified_since off;
      etag off;
    }

    location ~ \.(js|css|png|jpg|jpeg|gif|ico|woff|woff2|ttf|svg|eot|otf)$ {
      expires 1M;
      access_log off;
      add_header Cache-Control "public";
    }
    location / {
      try_files $uri$args $uri$args/ /index.html;
      proxy_connect_timeout 60s;
      proxy_read_timeout 5400s;
      proxy_send_timeout 5400s;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $http_connection;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
    }
  }
}